name: CPP CI

on:
  pull_request:
    paths-ignore:
      - '**.md'
      - 'Dockerfile'

concurrency:
  group: build-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  build_ubuntu:
    strategy:
      matrix:
        configurations: [Debug, Release]
        target: [tests, library]
    runs-on: ubuntu-latest
    env:
      BUILD_CONFIGURATION: ${{ matrix.configurations }}

    steps:
      - uses: actions/checkout@v5
        with:
          submodules: recursive

      - name: Install base dependencies
        run: |
          sudo apt-get update
          sudo apt install -y \
            libboost-dev libboost-filesystem-dev libboost-program-options-dev

      - name: Install test dependencies
        if: ${{ matrix.target == 'tests' }}
        run: sudo apt install -y libyaml-cpp-dev valgrind

      - name: Build
        run: |
          mkdir -p build
          cmake -B build -DCMAKE_BUILD_TYPE=${{ env.BUILD_CONFIGURATION }} \
                -DVERIFIER_ENABLE_TESTS=${{ matrix.target == 'tests' && 'ON' || 'OFF' }}
          cmake --build build -j$(nproc)

      - name: Run unit tests
        if: ${{ matrix.target == 'tests' }}
        run: ./tests -d yes

      - name: Test for memory leaks
        if: ${{ matrix.target == 'tests' && matrix.configurations == 'Debug' }}
        run: |
          valgrind --leak-check=full --errors-for-leak-kinds=all \
                   --show-leak-kinds=all --error-exitcode=1 \
                   ./check ebpf-samples/cilium/bpf_xdp_snat_linux_v1.o 2/1

  build_windows:
    strategy:
      matrix:
        configurations: [Debug, Release]
        target: [tests, library]
    runs-on: windows-2022
    env:
      BUILD_CONFIGURATION: ${{ matrix.configurations }}
      VCPKG_ROOT: C:\vcpkg

    steps:
      - uses: actions/checkout@v5
        with:
          submodules: recursive

      - name: Cache vcpkg
        uses: actions/cache@v4
        with:
          path: |
            C:\vcpkg\installed
            C:\vcpkg\buildtrees
            C:\vcpkg\downloads
          key: vcpkg-${{ runner.os }}-${{ hashFiles('**/vcpkg.json', '**/vcpkg-configuration.json') }}
          restore-keys: |
            vcpkg-${{ runner.os }}-

      - name: Setup vcpkg
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgGitCommitId: 2025.09.17
          runVcpkgInstall: true
          vcpkgJsonGlob: '**/vcpkg.json'
          vcpkgConfigurationJsonGlob: '**/vcpkg-configuration.json'

      - name: Configure CMake
        run: >
          cmake -B build
          -DCMAKE_BUILD_TYPE=${{ env.BUILD_CONFIGURATION }}
          -DVERIFIER_ENABLE_TESTS=${{ matrix.target == 'tests' && 'ON' || 'OFF' }}
          -DCMAKE_TOOLCHAIN_FILE=$env:VCPKG_ROOT\scripts\buildsystems\vcpkg.cmake

      - name: Build
        shell: pwsh
        run: cmake --build build --config $env:BUILD_CONFIGURATION -- /m:$env:NUMBER_OF_PROCESSORS

      - name: Run unit tests
        if: ${{ matrix.target == 'tests' }}
        working-directory: build
        run: .\${{ env.BUILD_CONFIGURATION }}\tests.exe -d yes
