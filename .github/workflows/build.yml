---
name: C++ CI

on:
  pull_request:
    paths-ignore:
      - '**.md'
      - 'Dockerfile'

concurrency:
  group: build-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  ubuntu:
    name: Ubuntu (${{ matrix.cfg }})${{ (matrix.cfg == 'Debug' && format(' shard {0}/{1}', matrix.shard_index, matrix.shards)) || '' }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        cfg: [Debug, Release]
        include:
          - cfg: Debug
            shards: 3
            shard_index: 0
          - cfg: Debug
            shards: 3
            shard_index: 1
          - cfg: Debug
            shards: 3
            shard_index: 2
    env:
      BUILD_CONFIGURATION: ${{ matrix.cfg }}
    steps:
      - uses: actions/checkout@v5
        with:
          submodules: recursive

      - name: Install deps
        run: |
          sudo apt-get update
          sudo apt-get install -y ccache libboost-dev libboost-filesystem-dev libboost-program-options-dev libyaml-cpp-dev
          echo 'max_size = 2G' | sudo tee /etc/ccache.conf
          echo "CCACHE_BASEDIR=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          echo "CCACHE_DIR=$HOME/.ccache" >> $GITHUB_ENV
          echo "CCACHE_COMPRESS=1" >> $GITHUB_ENV

      - name: Cache ccache
        uses: actions/cache@v4
        with:
          path: ~/.ccache
          key: ${{ runner.os }}-ccache-${{ matrix.cfg }}-${{ hashFiles('**/CMakeLists.txt') }}

      - name: Configure
        run: |
          cmake -S . -B build \
            -DCMAKE_BUILD_TYPE=${BUILD_CONFIGURATION} \
            -DVERIFIER_ENABLE_TESTS=ON \
            -DCMAKE_C_COMPILER_LAUNCHER=ccache \
            -DCMAKE_CXX_COMPILER_LAUNCHER=ccache

      - name: Build
        run: cmake --build build -j $(nproc)

      - name: Run tests
        if: ${{ matrix.cfg == 'Debug' }}
        run: ./tests -d yes --shard-count ${{ matrix.shards }} --shard-index ${{ matrix.shard_index }}
      - name: Run tests
        if: ${{ matrix.cfg == 'Release' }}
        run: ./tests -d yes

  windows_debug:
    name: Windows (Debug, Tests)
    runs-on: windows-2022
    env:
      BUILD_CONFIGURATION: Debug
    steps:
      - uses: actions/checkout@v5
        with:
          submodules: recursive

      # Setup vcpkg and enable binary caching automatically
      - name: run-vcpkg (manifest mode)
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgJsonGlob: '**/vcpkg.json'
        env:
          # static lib + dynamic CRT fits YAML_CPP_STATIC_DEFINE and MSVC Debug CRT
          VCPKG_DEFAULT_TRIPLET: x64-windows-static-md
          VCPKG_DEFAULT_HOST_TRIPLET: x64-windows-static-md

      - name: Configure
        shell: pwsh
        run: |
          $toolchain = "$env:VCPKG_INSTALLATION_ROOT\scripts\buildsystems\vcpkg.cmake"
          cmake -S . -B build `
            -DVERIFIER_ENABLE_TESTS=ON `
            -DCMAKE_TOOLCHAIN_FILE="$toolchain" `
            -DCMAKE_BUILD_TYPE=$env:BUILD_CONFIGURATION

      - name: Build
        shell: pwsh
        run: cmake --build build --config $env:BUILD_CONFIGURATION -- /m:$env:NUMBER_OF_PROCESSORS

      - name: Run all unit tests (Debug)
        shell: pwsh
        run: .\${{ env.BUILD_CONFIGURATION }}\tests.exe -d yes
