---
name: CPP CI

"on":
  pull_request:
    paths-ignore:
      - '**.md'
      - 'Dockerfile'

concurrency:
  group: build-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  build_ubuntu:
    strategy:
      matrix:
        configurations: [Debug, Release]
        target: [tests, library]
      fail-fast: false
    runs-on: ubuntu-latest
    env:
      CMAKE_GENERATOR: Ninja
    steps:
      - uses: actions/checkout@v5
        with:
          submodules: recursive

      - name: Install dependencies (Ubuntu)
        run: |
          sudo apt-get update
          sudo apt install -y cmake ninja-build g++ libboost-dev libboost-filesystem-dev libboost-program-options-dev
          if [ "${{ matrix.target }}" = "tests" ]; then
            sudo apt install -y libyaml-cpp-dev valgrind
          fi

      - name: Build
        run: |
          cmake -S . -B build \
            -G "${{ env.CMAKE_GENERATOR }}" \
            -D CMAKE_BUILD_TYPE=${{ matrix.configurations }} \
            -D prevail_ENABLE_TESTS=$([ "${{ matrix.target }}" = "tests" ] && echo ON || echo OFF)
          cmake --build build -- -j $(nproc)

      - name: Run unit tests
        if: ${{ matrix.target == 'tests' }}
        run: bin/tests -d yes --order lex

      - name: Memory leak test (Debug only)
        if: ${{ matrix.target == 'tests' && matrix.configurations == 'Debug' }}
        run: >
          valgrind --leak-check=full --errors-for-leak-kinds=all
          --show-leak-kinds=all --error-exitcode=1
          bin/check ebpf-samples/cilium/bpf_xdp_snat_linux_v1.o 2/1

  build_windows:
    strategy:
      matrix:
        configurations: [Debug, Release]
        target: [tests, library]
      fail-fast: false
    runs-on: windows-2025
    env:
      MATRIX_TARGET: ${{ matrix.target }}
      BUILD_CONFIGURATION: ${{ matrix.configurations }}
      CMAKE_GENERATOR: "Visual Studio 17 2022"
    steps:
      - uses: actions/checkout@v5
        with:
          submodules: recursive

      - name: Cache Boost packages
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}\build\packages
          key: boost-${{ runner.os }}

      - name: Configure CMake
        shell: pwsh
        run: |
          $enableTests = if ($env:MATRIX_TARGET -eq "tests") { "ON" } else { "OFF" }
          cmake -S . -B build `
          -G "$env:CMAKE_GENERATOR" `
          -D prevail_ENABLE_TESTS=$enableTests

      - name: Build
        shell: pwsh
        run: cmake --build build --config "$env:BUILD_CONFIGURATION" --parallel

      - name: Run unit tests
        if: ${{ matrix.target == 'tests' }}
        shell: pwsh
        run: bin\tests.exe -d yes --order lex
